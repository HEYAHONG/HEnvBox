#!/bin/bash
function CheckTool
{
	[  -n "$1"  ] ||
	{
		echo -e  "CheckTool 参数错误!!";
		return 255;
	};
	ToolPath=`which $1`;
	[ -e "$ToolPath" ] ||
	{
		 echo -e "$1 不存在，请先安装此工具!!!";
		 return 255;
	};
	return 0;
}

CheckTool find
[ $? -eq 0 ] || exit
CheckTool dirname
[ $? -eq 0 ] || exit
CheckTool readlink
[ $? -eq 0 ] || exit
CheckTool ln
[ $? -eq 0 ] || exit
CheckTool wc
[ $? -eq 0 ] || exit
CheckTool sed
[ $? -eq 0 ] || exit
CheckTool grep
[ $? -eq 0 ] || exit
CheckTool mkdir
[ $? -eq 0 ] || exit
CheckTool tr
[ $? -eq 0 ] || exit
CheckTool cat
[ $? -eq 0 ] || exit

if [ -z "${HENVBOX_LOCAL_ROOT_PATH_UNIX}" ]
then
	echo -e "不在HEnvBox环境中，无法设定!"
	exit
fi

#定义全局变量
ROOT_PATH="${HENVBOX_LOCAL_ROOT_PATH_UNIX}/crosstool-ng"
INSTALL_PREFIX="${HENVBOX_LOCAL_ROOT_PATH_UNIX}"

#准备目录,参数1为相对与ROOT_PATH的目录
function __prepare_dir__()
{
	mkdir -p ${ROOT_PATH}
	if [ -n "${ROOT_PATH}/$1" ]
	then
		[ -d "${ROOT_PATH}/$1" ] || mkdir -p "${ROOT_PATH}/$1"
	fi
}

__prepare_dir__

[ -d ${ROOT_PATH} ] || exit

if [ -x "${ROOT_PATH}/config.sh" ]
then
	. "${ROOT_PATH}/config.sh"
fi

#判断.config 是否存在
[ -f .config ] || exit

__prepare_dir__ "src"

sed -i "s/CT_LOCAL_TARBALLS_DIR=.*/CT_LOCAL_TARBALLS_DIR=\"${ROOT_PATH//\//\\\/}\/src\"/g" .config 2> /dev/null > /dev/null
sed -i "s/CT_PREFIX_DIR=.*/CT_PREFIX_DIR=\"${INSTALL_PREFIX//\//\\\/}\"/g" .config 2> /dev/null > /dev/null

echo -e "路径设定完成!"
